name: SAM Validate, Build, Test, Deploy
on:
  push:
    branches:
      - main
      - feature/use-aws
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
      - name: SAM Validate
        run: |
          sam validate -t aws/template.yaml
      - name: Configure variables
        shell: bash
        id: vars
        env:
          REPO: ${{ github.repository }}
          HASH: ${{ github.sha }}
          REF: ${{ github.ref }}
        run: |
          # Set variables
          REPOSITORY=`echo $REPO | tr "/" "-"`
          VERSIONKEY="faded-deadbeef"
          ENVIRONMENT=$REPOSITORY-$VERSIONKEY-${{ secrets.AWS_REGION }}
          # In this step we are setting variables and persistenting them
          # into the environment so that they can be utilized in other steps
          echo "::set-output name=repository::$REPOSITORY"
          echo "::set-output name=versionkey::$VERSION_KEY"
          echo "::set-output name=environment::$ENVIRONMENT"
          # Output variables to ensure their values are set correctly when ran
          echo "The region is ${{ secrets.AWS_REGION }}"
          echo "The repository is $REPOSITORY"
          echo "The environment is $ENVIRONMENT"
          echo "The version key is $VERSIONKEY"
      # sam build
      - name: SAM Build
        run: sam build -t aws/template.yaml

# Run Unit tests- Specify unit tests here 

# sam deploy
      - name: SAM Deploy
        run: |
          # Run SAM Deploy
          sam deploy --debug --template-file .aws-sam/build/template.yaml \
            --stack-name ${{ steps.vars.outputs.environment }} \
            --s3-bucket ${{ steps.vars.outputs.environment }} \
            --parameter-overrides \
              'ParameterKey=OpenSearchURL,ParameterValue=${{ secrets.ES_URL }} \
              ParameterKey=PostgresURL,ParameterValue=${{ secrets.PG_URL }} \
              ParameterKey=PostgresCert,ParameterValue=${{ secrets.CA_CERT }} \
              ParameterKey=Version,ParameterValue=${{ steps.vars.outputs.version }}' \
            --no-progressbar \  
            --no-fail-on-empty-changeset \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM
